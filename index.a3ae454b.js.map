{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCEA,I,EAAM,EAAO,SAAS,aAAa,CAAC,MAC9B,E,A,S,C,E,G,M,O,C,G,O,E,E,E,EAAgB,SAAS,gBAAgB,CAAC,Q,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,IAUhD,SAAS,EAAc,CAAM,EAC3B,MAAO,CAAC,EAAO,KAAK,CAAC,GAAG,OAAO,CAAC,IAAK,GACvC,EAWA,AArBA,SAAkB,CAAe,EAK/B,AAJmB,EAAgB,IAAI,CACrC,SAAC,CAAA,CAAG,CADN,EACY,OAAA,EAAc,EAAE,OAAO,CAAC,MAAM,EAAI,EAAc,EAAE,OAAO,CAAC,MAAM,C,GAGjE,OAAO,CAAC,SAAC,CAApB,EAA2B,OAAA,EAAK,MAAM,CAAC,E,EACzC,EAeS,GARA,AASG,EATE,GAAG,CAAC,SAAC,CAAjB,EAA+B,MAAA,CAC7B,KAAM,EAAS,SAAS,CACxB,IAAK,EAAS,OAAO,CAAC,GAAG,CACzB,SAAU,EAAS,OAAO,CAAC,QAAQ,CACnC,OAAQ,EAAS,OAAO,CAAC,MAAM,AACjC,C","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar list = document.querySelector(\"ul\");\nvar employees = _to_consumable_array(document.querySelectorAll(\"li\"));\nfunction sortList(listOfEmployees) {\n    var sortedList = listOfEmployees.sort(function(a, b) {\n        return correctFormat(b.dataset.salary) - correctFormat(a.dataset.salary);\n    });\n    sortedList.forEach(function(el) {\n        return list.append(el);\n    });\n}\nfunction correctFormat(salary) {\n    return +salary.slice(1).replace(\",\", \"\");\n}\nfunction getEmployes(prop) {\n    return prop.map(function(employee) {\n        return {\n            name: employee.innerText,\n            age: employee.dataset.age,\n            position: employee.dataset.position,\n            salary: employee.dataset.salary\n        };\n    });\n}\nsortList(employees);\ngetEmployes(employees);\n\n//# sourceMappingURL=index.a3ae454b.js.map\n","'use strict';\n\nconst list = document.querySelector('ul');\nconst employees = [...document.querySelectorAll('li')];\n\nfunction sortList(listOfEmployees) {\n  const sortedList = listOfEmployees.sort(\n    (a, b) => correctFormat(b.dataset.salary) - correctFormat(a.dataset.salary),\n  );\n\n  sortedList.forEach((el) => list.append(el));\n}\n\nfunction correctFormat(salary) {\n  return +salary.slice(1).replace(',', '');\n}\n\nfunction getEmployes(prop) {\n  return prop.map((employee) => ({\n    name: employee.innerText,\n    age: employee.dataset.age,\n    position: employee.dataset.position,\n    salary: employee.dataset.salary,\n  }));\n}\n\nsortList(employees);\ngetEmployes(employees);\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","list","document","querySelector","employees","_array_without_holes","isArray","querySelectorAll","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","correctFormat","salary","replace","sortList","listOfEmployees","sortedList","sort","a","b","dataset","forEach","el","append","prop","map","employee","innerText","age","position"],"version":3,"file":"index.a3ae454b.js.map"}